{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[],"Cache":[{"_id":"source/about/index.md","hash":"eb5795fc6e20881838ea4bcf21afc9e2fc56ff98","modified":1500090280723},{"_id":"source/_posts/BaiduMapAPI.md","hash":"cd2039230256273a8fcbb00334b2e2a819378ca2","modified":1500090280707},{"_id":"source/_posts/curl-google-com.md","hash":"43d3f4a0f9b17cb26f0163530b469ff0f920a13f","modified":1501333922314},{"_id":"source/_posts/curl-google-com/google.gif","hash":"187e7a3f9c05e069433d01072c095079d0207612","modified":1501333198868},{"_id":"source/_posts/BaiduMapAPI/baiduMap.jpg","hash":"fa068c3dc442567f2be99f75d1f8b51acfc57ab7","modified":1500090280723},{"_id":"public/content.json","hash":"c4b003285191f3bdea647e7781cf3d655433dd02","modified":1501333935634},{"_id":"public/about/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501333935639},{"_id":"public/2017/07/29/curl-google-com/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501333935639},{"_id":"public/2016/12/08/BaiduMapAPI/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501333935639},{"_id":"public/archives/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501333935639},{"_id":"public/archives/2016/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501333935640},{"_id":"public/archives/2016/12/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501333935641},{"_id":"public/archives/2017/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501333935641},{"_id":"public/archives/2017/07/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501333935642},{"_id":"public/categories/开发工具/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501333935645},{"_id":"public/categories/学习笔记/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501333935645},{"_id":"public/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501333935645},{"_id":"public/tags/百度地图/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501333935645},{"_id":"public/tags/工具/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501333935645},{"_id":"public/tags/WEB/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501333935646},{"_id":"public/2017/07/29/curl-google-com/google.gif","hash":"187e7a3f9c05e069433d01072c095079d0207612","modified":1501333935700},{"_id":"public/2016/12/08/BaiduMapAPI/baiduMap.jpg","hash":"fa068c3dc442567f2be99f75d1f8b51acfc57ab7","modified":1501333935710}],"Category":[{"name":"开发工具","_id":"cj5pbgmbm0002v0omwpgmv2nn"},{"name":"学习笔记","_id":"cj5pbgmcf0009v0omdmmbk8bk"}],"Data":[],"Page":[{"title":"","date":"2016-12-08T04:32:01.000Z","_content":"## 一些个人信息","source":"about/index.md","raw":"---\ntitle:\ndate: 2016-12-08 12:32:01\n---\n## 一些个人信息","updated":"2017-07-15T03:44:40.723Z","path":"about/index.html","comments":1,"layout":"page","_id":"cj5pbgmb40000v0omw7iz4qyr","content":"<h2 id=\"一些个人信息\"><a href=\"#一些个人信息\" class=\"headerlink\" title=\"一些个人信息\"></a>一些个人信息</h2>","excerpt":"","more":"<h2 id=\"一些个人信息\"><a href=\"#一些个人信息\" class=\"headerlink\" title=\"一些个人信息\"></a>一些个人信息</h2>"}],"Post":[{"title":"百度地图离线API制作","date":"2016-12-08T07:47:17.000Z","_content":"{% asset_img baiduMap.jpg 配图木有名字 %}\n百度地图离线API制作，以API v1.3为例。更高版本请自行搜索。\n\n## 第一步\n访问 [http://api.map.baidu.com/api?v=1.3](http://api.map.baidu.com/api?v=1.3) 得到如下内容\n```javascript\n(function(){\n    window.wise=1;\n    window.netSpeed=254;\n    window.netType=1;\n    window.BMap_loadScriptTime = (new Date).getTime();\n    document.write('<script type=\"text/javascript\" src=\"http://api.map.baidu.com/getscript?v=1.3&ak=&services=&t=20150527115231\"></script>');\n    document.write('<link rel=\"stylesheet\" type=\"text/css\" href=\"http://api.map.baidu.com/res/13/bmap.css\"/>');\n})();\n```\n这一步将获得一个js文件的位置和一个css文件的位置，然后分别下载下来，放在准备好的文件夹里面，我分别存储在/js和/css里面。js的路径后面有若干参数，不管，下载下来的文件重新命名就好，比如js文件命名为`apiv1.3.min.js`\n\n## 第二步\n修改这个js中的代码。由于代码是压缩在一行上的，可通过网上的代码在线格式化。\n1. 搜索变量：`imgPath`，直到找到一段代码\n    ```javascript\n    var x=m?\"https://sapi.map.baidu.com/\":\"http://api.map.baidu.com/\";\n    var cd={imgPath:x+\"images/\",cityNames:{\"\\u5317\\u4eac\":\"bj\",\n    ```\n    把`imgPath:x+\"images/\"`中的x去掉即可，这样就变成了跟网络地址无关的相对位置了。这里指出的`images`文件夹，是与将来的html文件夹平行的目录里面的。\n    例如：\n    ```javascript\n    var x=m?\"https://sapi.map.baidu.com/\":\"http://api.map.baidu.com/\";\n    var cd={imgPath:\"images/\",cityNames:{\"\\u5317\\u4eac\":\"bj\",\n    ```\n1. 搜索变量：`_baseUrl`，直到找到这样的一段代码\n    ```javascript\n    preLoaded:{},Config:{_baseUrl:x+\"getmodules?v=1.3\",_timeout:5000},\n    ```\n    同样，要去掉x，这个x也是前面这段代码中的x。同时，不仅要去掉x，更要把地址指向js目录。\n    例如：\n    ```javascript\n    preLoaded:{},Config:{_baseUrl:\"js/\",_timeout:5000},\n    ```\n1. 继续搜索下一个`_baseUrl`，得到下面的代码：\n    ```javascript\n    window.setTimeout(function(){\n        var cP=cN.Config._baseUrl+\"&mod=\"+cN.Module._arrMdls.join(\",\");\n        cy.request(cP);\n        cN.Module._arrMdls.length=0;\n        cN.delayFlag=false;\n    },1);\n    ```\n    直接修改`cP`变量（变量名与版本有关，可能不同），注意：这里把加载地址直接写死\n    ```javascript\n    var cP=cN.Config._baseUrl+\"modules\";\n    cy.request(cP);\n    ```\n    这样，我们把动态模块加载改为了手动加载离线模块文件。\n    访问这个地址 [http://api.map.baidu.com/getmodules?v=1.3&mod=map,oppc,tile,control,marker,poly](http://api.map.baidu.com/getmodules?v=1.3&mod=map,oppc,tile,control,marker,poly) 我们就能拿到相应参数的模块源文件。\n    新建文件`modules`，放在js文件夹里面即可。\n1. 关键的一步：搜索`getTilesUrl`直到找到这样的一段（变量名aU可能不一样）\n```javascript\naU.getTilesUrl = function(cN, cQ) {\n    var cR = cN.x;\n    var cO = cN.y;\n    var T = \"20150518\";\n    var cP = \"pl\";\n    if (this.map.highResolutionEnabled()) {\n        cP = \"ph\"\n    }\n    var cM = j[Math.abs(cR + cO) % j.length] + \"?qt=tile&x=\"\n\t\t+ (cR + \"\").replace(/-/gi, \"M\") + \"&y=\"\n\t\t+ (cO + \"\").replace(/-/gi, \"M\") + \"&z=\" + cQ + \"&styles=\" + cP\n        + (a9.browser.ie == 6 ? \"&color_dep=32&colors=50\" : \"\")\n        + \"&udt=\" + T;\n    return cM.replace(/-(\\d+)/gi, \"M$1\")\n};\nwindow.BMAP_NORMAL_MAP = new cv(\"\\u5730\\u56fe\", aU, {\n    tips : \"\\u663e\\u793a\\u666e\\u901a\\u5730\\u56fe\"\n});\n```\n`getTilesUrl`这个方法，这里就是返回瓦片未知的关键方法。两个参数中，第一个参数是{x，y}，第二个参数就是z，这样xyz就都有了。\n直接把它计算出来的cM的结果重新计算一下，改成：\n```javascript\ncM = \"tiles/\" + cQ + \"/\" + cR + \"/\" + cO + \".jpg\";\n```\n.jpg后缀与你下载的瓦片图片格式有关。\n这样就设置了`BMAP_NORMAL_MAP`地图类型的地图瓦片获取url，即为放在tiles目录下的瓦片资源。同理可以设置卫星`BMAP_SATELLITE_MAP`等地图类型的离线瓦片url。\n\n## 第三步\n下载相关资源\n2. 图片文件\n像一些logo等图片资源。可通过chrome开发者工具查看缺少的图片文件，以及url。然后自行下载。将图片放在`images`文件夹中，并修改`bmap.css`中相应的url为本地路径。\n2. 依赖模块API文件\n    如果缺少某个依赖模块，则无法使用相应的API。\n    在运行前期工作中的在线地图时，就可发现，依赖的库参数是什么。例如：以下的代码运行，所请求的依赖库参数是[http://api.map.baidu.com/getmodules?v=1.3&mod=map,oppc,tile,control](http://api.map.baidu.com/getmodules?v=1.3&mod=map,oppc,tile,control)\n    ```html\n    <script type=\"text/javascript\">\n        var map = new BMap.Map(\"container\",{mapType:BMAP_NORMAL_MAP});\n        var point = new BMap.Point(116.404, 39.915);    // 创建点坐标\n        map.centerAndZoom(point,5);                     // 初始化地图,设置中心点坐标和地图级别。\n\n        //map.addControl(new BMap.MapTypeControl());\n        map.addControl(new BMap.NavigationControl());\n        map.enableScrollWheelZoom();                  // 启用滚轮放大缩小。\n        map.enableKeyboard();                         // 启用键盘操作。\n        //map.setCurrentCity(\"北京\");          // 设置地图显示的城市 此项是必须设置的\n    </script>\n    ```\n    总共有哪些依赖模块可以去`apiv1.3.min.js`中搜索`Dependency`\n2. 瓦片资源\n可以选择 `全能电子地图下载器` 下载，其中`1.9.5`版本有破解，不过有些瓦片无法下载。或者选择自己拼凑瓦片，有教程获取瓦片url。\n\n## 最后\n离线API算是做好了，目录结构大致为：\n- css\n    - bmap.css\n- images\n- js\n    - apiv1.3.min.js\n\t- modules\n- tiles\n\n[HawkUI](https://github.com/lakehumin/hawkui)项目中便用到了该离线API，文件在`public`目录下。","source":"_posts/BaiduMapAPI.md","raw":"---\ntitle: 百度地图离线API制作\ndate: 2016-12-08 15:47:17\ntags:\n- 百度地图\n- 工具\ncategories:\n- 开发工具\n---\n{% asset_img baiduMap.jpg 配图木有名字 %}\n百度地图离线API制作，以API v1.3为例。更高版本请自行搜索。\n\n## 第一步\n访问 [http://api.map.baidu.com/api?v=1.3](http://api.map.baidu.com/api?v=1.3) 得到如下内容\n```javascript\n(function(){\n    window.wise=1;\n    window.netSpeed=254;\n    window.netType=1;\n    window.BMap_loadScriptTime = (new Date).getTime();\n    document.write('<script type=\"text/javascript\" src=\"http://api.map.baidu.com/getscript?v=1.3&ak=&services=&t=20150527115231\"></script>');\n    document.write('<link rel=\"stylesheet\" type=\"text/css\" href=\"http://api.map.baidu.com/res/13/bmap.css\"/>');\n})();\n```\n这一步将获得一个js文件的位置和一个css文件的位置，然后分别下载下来，放在准备好的文件夹里面，我分别存储在/js和/css里面。js的路径后面有若干参数，不管，下载下来的文件重新命名就好，比如js文件命名为`apiv1.3.min.js`\n\n## 第二步\n修改这个js中的代码。由于代码是压缩在一行上的，可通过网上的代码在线格式化。\n1. 搜索变量：`imgPath`，直到找到一段代码\n    ```javascript\n    var x=m?\"https://sapi.map.baidu.com/\":\"http://api.map.baidu.com/\";\n    var cd={imgPath:x+\"images/\",cityNames:{\"\\u5317\\u4eac\":\"bj\",\n    ```\n    把`imgPath:x+\"images/\"`中的x去掉即可，这样就变成了跟网络地址无关的相对位置了。这里指出的`images`文件夹，是与将来的html文件夹平行的目录里面的。\n    例如：\n    ```javascript\n    var x=m?\"https://sapi.map.baidu.com/\":\"http://api.map.baidu.com/\";\n    var cd={imgPath:\"images/\",cityNames:{\"\\u5317\\u4eac\":\"bj\",\n    ```\n1. 搜索变量：`_baseUrl`，直到找到这样的一段代码\n    ```javascript\n    preLoaded:{},Config:{_baseUrl:x+\"getmodules?v=1.3\",_timeout:5000},\n    ```\n    同样，要去掉x，这个x也是前面这段代码中的x。同时，不仅要去掉x，更要把地址指向js目录。\n    例如：\n    ```javascript\n    preLoaded:{},Config:{_baseUrl:\"js/\",_timeout:5000},\n    ```\n1. 继续搜索下一个`_baseUrl`，得到下面的代码：\n    ```javascript\n    window.setTimeout(function(){\n        var cP=cN.Config._baseUrl+\"&mod=\"+cN.Module._arrMdls.join(\",\");\n        cy.request(cP);\n        cN.Module._arrMdls.length=0;\n        cN.delayFlag=false;\n    },1);\n    ```\n    直接修改`cP`变量（变量名与版本有关，可能不同），注意：这里把加载地址直接写死\n    ```javascript\n    var cP=cN.Config._baseUrl+\"modules\";\n    cy.request(cP);\n    ```\n    这样，我们把动态模块加载改为了手动加载离线模块文件。\n    访问这个地址 [http://api.map.baidu.com/getmodules?v=1.3&mod=map,oppc,tile,control,marker,poly](http://api.map.baidu.com/getmodules?v=1.3&mod=map,oppc,tile,control,marker,poly) 我们就能拿到相应参数的模块源文件。\n    新建文件`modules`，放在js文件夹里面即可。\n1. 关键的一步：搜索`getTilesUrl`直到找到这样的一段（变量名aU可能不一样）\n```javascript\naU.getTilesUrl = function(cN, cQ) {\n    var cR = cN.x;\n    var cO = cN.y;\n    var T = \"20150518\";\n    var cP = \"pl\";\n    if (this.map.highResolutionEnabled()) {\n        cP = \"ph\"\n    }\n    var cM = j[Math.abs(cR + cO) % j.length] + \"?qt=tile&x=\"\n\t\t+ (cR + \"\").replace(/-/gi, \"M\") + \"&y=\"\n\t\t+ (cO + \"\").replace(/-/gi, \"M\") + \"&z=\" + cQ + \"&styles=\" + cP\n        + (a9.browser.ie == 6 ? \"&color_dep=32&colors=50\" : \"\")\n        + \"&udt=\" + T;\n    return cM.replace(/-(\\d+)/gi, \"M$1\")\n};\nwindow.BMAP_NORMAL_MAP = new cv(\"\\u5730\\u56fe\", aU, {\n    tips : \"\\u663e\\u793a\\u666e\\u901a\\u5730\\u56fe\"\n});\n```\n`getTilesUrl`这个方法，这里就是返回瓦片未知的关键方法。两个参数中，第一个参数是{x，y}，第二个参数就是z，这样xyz就都有了。\n直接把它计算出来的cM的结果重新计算一下，改成：\n```javascript\ncM = \"tiles/\" + cQ + \"/\" + cR + \"/\" + cO + \".jpg\";\n```\n.jpg后缀与你下载的瓦片图片格式有关。\n这样就设置了`BMAP_NORMAL_MAP`地图类型的地图瓦片获取url，即为放在tiles目录下的瓦片资源。同理可以设置卫星`BMAP_SATELLITE_MAP`等地图类型的离线瓦片url。\n\n## 第三步\n下载相关资源\n2. 图片文件\n像一些logo等图片资源。可通过chrome开发者工具查看缺少的图片文件，以及url。然后自行下载。将图片放在`images`文件夹中，并修改`bmap.css`中相应的url为本地路径。\n2. 依赖模块API文件\n    如果缺少某个依赖模块，则无法使用相应的API。\n    在运行前期工作中的在线地图时，就可发现，依赖的库参数是什么。例如：以下的代码运行，所请求的依赖库参数是[http://api.map.baidu.com/getmodules?v=1.3&mod=map,oppc,tile,control](http://api.map.baidu.com/getmodules?v=1.3&mod=map,oppc,tile,control)\n    ```html\n    <script type=\"text/javascript\">\n        var map = new BMap.Map(\"container\",{mapType:BMAP_NORMAL_MAP});\n        var point = new BMap.Point(116.404, 39.915);    // 创建点坐标\n        map.centerAndZoom(point,5);                     // 初始化地图,设置中心点坐标和地图级别。\n\n        //map.addControl(new BMap.MapTypeControl());\n        map.addControl(new BMap.NavigationControl());\n        map.enableScrollWheelZoom();                  // 启用滚轮放大缩小。\n        map.enableKeyboard();                         // 启用键盘操作。\n        //map.setCurrentCity(\"北京\");          // 设置地图显示的城市 此项是必须设置的\n    </script>\n    ```\n    总共有哪些依赖模块可以去`apiv1.3.min.js`中搜索`Dependency`\n2. 瓦片资源\n可以选择 `全能电子地图下载器` 下载，其中`1.9.5`版本有破解，不过有些瓦片无法下载。或者选择自己拼凑瓦片，有教程获取瓦片url。\n\n## 最后\n离线API算是做好了，目录结构大致为：\n- css\n    - bmap.css\n- images\n- js\n    - apiv1.3.min.js\n\t- modules\n- tiles\n\n[HawkUI](https://github.com/lakehumin/hawkui)项目中便用到了该离线API，文件在`public`目录下。","slug":"BaiduMapAPI","published":1,"updated":"2017-07-15T03:44:40.707Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5pbgmba0001v0omlt7m7873","content":"<img src=\"/2016/12/08/BaiduMapAPI/baiduMap.jpg\" alt=\"配图木有名字\" title=\"配图木有名字\">\n<p>百度地图离线API制作，以API v1.3为例。更高版本请自行搜索。</p>\n<h2 id=\"第一步\"><a href=\"#第一步\" class=\"headerlink\" title=\"第一步\"></a>第一步</h2><p>访问 <a href=\"http://api.map.baidu.com/api?v=1.3\" target=\"_blank\" rel=\"external\">http://api.map.baidu.com/api?v=1.3</a> 得到如下内容<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"built_in\">window</span>.wise=<span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"built_in\">window</span>.netSpeed=<span class=\"number\">254</span>;</div><div class=\"line\">    <span class=\"built_in\">window</span>.netType=<span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"built_in\">window</span>.BMap_loadScriptTime = (<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>).getTime();</div><div class=\"line\">    <span class=\"built_in\">document</span>.write(<span class=\"string\">'&lt;script type=\"text/javascript\" src=\"http://api.map.baidu.com/getscript?v=1.3&amp;ak=&amp;services=&amp;t=20150527115231\"&gt;&lt;/script&gt;'</span>);</div><div class=\"line\">    <span class=\"built_in\">document</span>.write(<span class=\"string\">'&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"http://api.map.baidu.com/res/13/bmap.css\"/&gt;'</span>);</div><div class=\"line\">&#125;)();</div></pre></td></tr></table></figure></p>\n<p>这一步将获得一个js文件的位置和一个css文件的位置，然后分别下载下来，放在准备好的文件夹里面，我分别存储在/js和/css里面。js的路径后面有若干参数，不管，下载下来的文件重新命名就好，比如js文件命名为<code>apiv1.3.min.js</code></p>\n<h2 id=\"第二步\"><a href=\"#第二步\" class=\"headerlink\" title=\"第二步\"></a>第二步</h2><p>修改这个js中的代码。由于代码是压缩在一行上的，可通过网上的代码在线格式化。</p>\n<ol>\n<li><p>搜索变量：<code>imgPath</code>，直到找到一段代码</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> x=m?<span class=\"string\">\"https://sapi.map.baidu.com/\"</span>:<span class=\"string\">\"http://api.map.baidu.com/\"</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> cd=&#123;<span class=\"attr\">imgPath</span>:x+<span class=\"string\">\"images/\"</span>,<span class=\"attr\">cityNames</span>:&#123;<span class=\"string\">\"\\u5317\\u4eac\"</span>:<span class=\"string\">\"bj\"</span>,</div></pre></td></tr></table></figure>\n<p> 把<code>imgPath:x+&quot;images/&quot;</code>中的x去掉即可，这样就变成了跟网络地址无关的相对位置了。这里指出的<code>images</code>文件夹，是与将来的html文件夹平行的目录里面的。<br> 例如：</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> x=m?<span class=\"string\">\"https://sapi.map.baidu.com/\"</span>:<span class=\"string\">\"http://api.map.baidu.com/\"</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> cd=&#123;<span class=\"attr\">imgPath</span>:<span class=\"string\">\"images/\"</span>,<span class=\"attr\">cityNames</span>:&#123;<span class=\"string\">\"\\u5317\\u4eac\"</span>:<span class=\"string\">\"bj\"</span>,</div></pre></td></tr></table></figure>\n</li>\n<li><p>搜索变量：<code>_baseUrl</code>，直到找到这样的一段代码</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">preLoaded:&#123;&#125;,<span class=\"attr\">Config</span>:&#123;<span class=\"attr\">_baseUrl</span>:x+<span class=\"string\">\"getmodules?v=1.3\"</span>,<span class=\"attr\">_timeout</span>:<span class=\"number\">5000</span>&#125;,</div></pre></td></tr></table></figure>\n<p> 同样，要去掉x，这个x也是前面这段代码中的x。同时，不仅要去掉x，更要把地址指向js目录。<br> 例如：</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">preLoaded:&#123;&#125;,<span class=\"attr\">Config</span>:&#123;<span class=\"attr\">_baseUrl</span>:<span class=\"string\">\"js/\"</span>,<span class=\"attr\">_timeout</span>:<span class=\"number\">5000</span>&#125;,</div></pre></td></tr></table></figure>\n</li>\n<li><p>继续搜索下一个<code>_baseUrl</code>，得到下面的代码：</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">window</span>.setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> cP=cN.Config._baseUrl+<span class=\"string\">\"&amp;mod=\"</span>+cN.Module._arrMdls.join(<span class=\"string\">\",\"</span>);</div><div class=\"line\">    cy.request(cP);</div><div class=\"line\">    cN.Module._arrMdls.length=<span class=\"number\">0</span>;</div><div class=\"line\">    cN.delayFlag=<span class=\"literal\">false</span>;</div><div class=\"line\">&#125;,<span class=\"number\">1</span>);</div></pre></td></tr></table></figure>\n<p> 直接修改<code>cP</code>变量（变量名与版本有关，可能不同），注意：这里把加载地址直接写死</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> cP=cN.Config._baseUrl+<span class=\"string\">\"modules\"</span>;</div><div class=\"line\">cy.request(cP);</div></pre></td></tr></table></figure>\n<p> 这样，我们把动态模块加载改为了手动加载离线模块文件。<br> 访问这个地址 <a href=\"http://api.map.baidu.com/getmodules?v=1.3&amp;mod=map,oppc,tile,control,marker,poly\" target=\"_blank\" rel=\"external\">http://api.map.baidu.com/getmodules?v=1.3&amp;mod=map,oppc,tile,control,marker,poly</a> 我们就能拿到相应参数的模块源文件。<br> 新建文件<code>modules</code>，放在js文件夹里面即可。</p>\n</li>\n<li>关键的一步：搜索<code>getTilesUrl</code>直到找到这样的一段（变量名aU可能不一样）<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">aU.getTilesUrl = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">cN, cQ</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> cR = cN.x;</div><div class=\"line\">    <span class=\"keyword\">var</span> cO = cN.y;</div><div class=\"line\">    <span class=\"keyword\">var</span> T = <span class=\"string\">\"20150518\"</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> cP = <span class=\"string\">\"pl\"</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.map.highResolutionEnabled()) &#123;</div><div class=\"line\">        cP = <span class=\"string\">\"ph\"</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">var</span> cM = j[<span class=\"built_in\">Math</span>.abs(cR + cO) % j.length] + <span class=\"string\">\"?qt=tile&amp;x=\"</span></div><div class=\"line\">\t\t+ (cR + <span class=\"string\">\"\"</span>).replace(<span class=\"regexp\">/-/gi</span>, <span class=\"string\">\"M\"</span>) + <span class=\"string\">\"&amp;y=\"</span></div><div class=\"line\">\t\t+ (cO + <span class=\"string\">\"\"</span>).replace(<span class=\"regexp\">/-/gi</span>, <span class=\"string\">\"M\"</span>) + <span class=\"string\">\"&amp;z=\"</span> + cQ + <span class=\"string\">\"&amp;styles=\"</span> + cP</div><div class=\"line\">        + (a9.browser.ie == <span class=\"number\">6</span> ? <span class=\"string\">\"&amp;color_dep=32&amp;colors=50\"</span> : <span class=\"string\">\"\"</span>)</div><div class=\"line\">        + <span class=\"string\">\"&amp;udt=\"</span> + T;</div><div class=\"line\">    <span class=\"keyword\">return</span> cM.replace(<span class=\"regexp\">/-(\\d+)/gi</span>, <span class=\"string\">\"M$1\"</span>)</div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"built_in\">window</span>.BMAP_NORMAL_MAP = <span class=\"keyword\">new</span> cv(<span class=\"string\">\"\\u5730\\u56fe\"</span>, aU, &#123;</div><div class=\"line\">    <span class=\"attr\">tips</span> : <span class=\"string\">\"\\u663e\\u793a\\u666e\\u901a\\u5730\\u56fe\"</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><code>getTilesUrl</code>这个方法，这里就是返回瓦片未知的关键方法。两个参数中，第一个参数是{x，y}，第二个参数就是z，这样xyz就都有了。<br>直接把它计算出来的cM的结果重新计算一下，改成：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cM = <span class=\"string\">\"tiles/\"</span> + cQ + <span class=\"string\">\"/\"</span> + cR + <span class=\"string\">\"/\"</span> + cO + <span class=\"string\">\".jpg\"</span>;</div></pre></td></tr></table></figure></p>\n<p>.jpg后缀与你下载的瓦片图片格式有关。<br>这样就设置了<code>BMAP_NORMAL_MAP</code>地图类型的地图瓦片获取url，即为放在tiles目录下的瓦片资源。同理可以设置卫星<code>BMAP_SATELLITE_MAP</code>等地图类型的离线瓦片url。</p>\n<h2 id=\"第三步\"><a href=\"#第三步\" class=\"headerlink\" title=\"第三步\"></a>第三步</h2><p>下载相关资源</p>\n<ol>\n<li>图片文件<br>像一些logo等图片资源。可通过chrome开发者工具查看缺少的图片文件，以及url。然后自行下载。将图片放在<code>images</code>文件夹中，并修改<code>bmap.css</code>中相应的url为本地路径。</li>\n<li><p>依赖模块API文件<br> 如果缺少某个依赖模块，则无法使用相应的API。<br> 在运行前期工作中的在线地图时，就可发现，依赖的库参数是什么。例如：以下的代码运行，所请求的依赖库参数是<a href=\"http://api.map.baidu.com/getmodules?v=1.3&amp;mod=map,oppc,tile,control\" target=\"_blank\" rel=\"external\">http://api.map.baidu.com/getmodules?v=1.3&amp;mod=map,oppc,tile,control</a></p>\n <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">    <span class=\"keyword\">var</span> map = <span class=\"keyword\">new</span> BMap.Map(<span class=\"string\">\"container\"</span>,&#123;<span class=\"attr\">mapType</span>:BMAP_NORMAL_MAP&#125;);</div><div class=\"line\">    <span class=\"keyword\">var</span> point = <span class=\"keyword\">new</span> BMap.Point(<span class=\"number\">116.404</span>, <span class=\"number\">39.915</span>);    <span class=\"comment\">// 创建点坐标</span></div><div class=\"line\">    map.centerAndZoom(point,<span class=\"number\">5</span>);                     <span class=\"comment\">// 初始化地图,设置中心点坐标和地图级别。</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//map.addControl(new BMap.MapTypeControl());</span></div><div class=\"line\">    map.addControl(<span class=\"keyword\">new</span> BMap.NavigationControl());</div><div class=\"line\">    map.enableScrollWheelZoom();                  <span class=\"comment\">// 启用滚轮放大缩小。</span></div><div class=\"line\">    map.enableKeyboard();                         <span class=\"comment\">// 启用键盘操作。</span></div><div class=\"line\">    <span class=\"comment\">//map.setCurrentCity(\"北京\");          // 设置地图显示的城市 此项是必须设置的</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<p> 总共有哪些依赖模块可以去<code>apiv1.3.min.js</code>中搜索<code>Dependency</code></p>\n</li>\n<li>瓦片资源<br>可以选择 <code>全能电子地图下载器</code> 下载，其中<code>1.9.5</code>版本有破解，不过有些瓦片无法下载。或者选择自己拼凑瓦片，有教程获取瓦片url。</li>\n</ol>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>离线API算是做好了，目录结构大致为：</p>\n<ul>\n<li>css<ul>\n<li>bmap.css</li>\n</ul>\n</li>\n<li>images</li>\n<li>js<ul>\n<li>apiv1.3.min.js</li>\n<li>modules</li>\n</ul>\n</li>\n<li>tiles</li>\n</ul>\n<p><a href=\"https://github.com/lakehumin/hawkui\" target=\"_blank\" rel=\"external\">HawkUI</a>项目中便用到了该离线API，文件在<code>public</code>目录下。</p>\n","excerpt":"","more":"<img src=\"/2016/12/08/BaiduMapAPI/baiduMap.jpg\" alt=\"配图木有名字\" title=\"配图木有名字\">\n<p>百度地图离线API制作，以API v1.3为例。更高版本请自行搜索。</p>\n<h2 id=\"第一步\"><a href=\"#第一步\" class=\"headerlink\" title=\"第一步\"></a>第一步</h2><p>访问 <a href=\"http://api.map.baidu.com/api?v=1.3\">http://api.map.baidu.com/api?v=1.3</a> 得到如下内容<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"built_in\">window</span>.wise=<span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"built_in\">window</span>.netSpeed=<span class=\"number\">254</span>;</div><div class=\"line\">    <span class=\"built_in\">window</span>.netType=<span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"built_in\">window</span>.BMap_loadScriptTime = (<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>).getTime();</div><div class=\"line\">    <span class=\"built_in\">document</span>.write(<span class=\"string\">'&lt;script type=\"text/javascript\" src=\"http://api.map.baidu.com/getscript?v=1.3&amp;ak=&amp;services=&amp;t=20150527115231\"&gt;&lt;/script&gt;'</span>);</div><div class=\"line\">    <span class=\"built_in\">document</span>.write(<span class=\"string\">'&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"http://api.map.baidu.com/res/13/bmap.css\"/&gt;'</span>);</div><div class=\"line\">&#125;)();</div></pre></td></tr></table></figure></p>\n<p>这一步将获得一个js文件的位置和一个css文件的位置，然后分别下载下来，放在准备好的文件夹里面，我分别存储在/js和/css里面。js的路径后面有若干参数，不管，下载下来的文件重新命名就好，比如js文件命名为<code>apiv1.3.min.js</code></p>\n<h2 id=\"第二步\"><a href=\"#第二步\" class=\"headerlink\" title=\"第二步\"></a>第二步</h2><p>修改这个js中的代码。由于代码是压缩在一行上的，可通过网上的代码在线格式化。</p>\n<ol>\n<li><p>搜索变量：<code>imgPath</code>，直到找到一段代码</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> x=m?<span class=\"string\">\"https://sapi.map.baidu.com/\"</span>:<span class=\"string\">\"http://api.map.baidu.com/\"</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> cd=&#123;<span class=\"attr\">imgPath</span>:x+<span class=\"string\">\"images/\"</span>,<span class=\"attr\">cityNames</span>:&#123;<span class=\"string\">\"\\u5317\\u4eac\"</span>:<span class=\"string\">\"bj\"</span>,</div></pre></td></tr></table></figure>\n<p> 把<code>imgPath:x+&quot;images/&quot;</code>中的x去掉即可，这样就变成了跟网络地址无关的相对位置了。这里指出的<code>images</code>文件夹，是与将来的html文件夹平行的目录里面的。<br> 例如：</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> x=m?<span class=\"string\">\"https://sapi.map.baidu.com/\"</span>:<span class=\"string\">\"http://api.map.baidu.com/\"</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> cd=&#123;<span class=\"attr\">imgPath</span>:<span class=\"string\">\"images/\"</span>,<span class=\"attr\">cityNames</span>:&#123;<span class=\"string\">\"\\u5317\\u4eac\"</span>:<span class=\"string\">\"bj\"</span>,</div></pre></td></tr></table></figure>\n</li>\n<li><p>搜索变量：<code>_baseUrl</code>，直到找到这样的一段代码</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">preLoaded:&#123;&#125;,<span class=\"attr\">Config</span>:&#123;<span class=\"attr\">_baseUrl</span>:x+<span class=\"string\">\"getmodules?v=1.3\"</span>,<span class=\"attr\">_timeout</span>:<span class=\"number\">5000</span>&#125;,</div></pre></td></tr></table></figure>\n<p> 同样，要去掉x，这个x也是前面这段代码中的x。同时，不仅要去掉x，更要把地址指向js目录。<br> 例如：</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">preLoaded:&#123;&#125;,<span class=\"attr\">Config</span>:&#123;<span class=\"attr\">_baseUrl</span>:<span class=\"string\">\"js/\"</span>,<span class=\"attr\">_timeout</span>:<span class=\"number\">5000</span>&#125;,</div></pre></td></tr></table></figure>\n</li>\n<li><p>继续搜索下一个<code>_baseUrl</code>，得到下面的代码：</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">window</span>.setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> cP=cN.Config._baseUrl+<span class=\"string\">\"&amp;mod=\"</span>+cN.Module._arrMdls.join(<span class=\"string\">\",\"</span>);</div><div class=\"line\">    cy.request(cP);</div><div class=\"line\">    cN.Module._arrMdls.length=<span class=\"number\">0</span>;</div><div class=\"line\">    cN.delayFlag=<span class=\"literal\">false</span>;</div><div class=\"line\">&#125;,<span class=\"number\">1</span>);</div></pre></td></tr></table></figure>\n<p> 直接修改<code>cP</code>变量（变量名与版本有关，可能不同），注意：这里把加载地址直接写死</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> cP=cN.Config._baseUrl+<span class=\"string\">\"modules\"</span>;</div><div class=\"line\">cy.request(cP);</div></pre></td></tr></table></figure>\n<p> 这样，我们把动态模块加载改为了手动加载离线模块文件。<br> 访问这个地址 <a href=\"http://api.map.baidu.com/getmodules?v=1.3&amp;mod=map,oppc,tile,control,marker,poly\">http://api.map.baidu.com/getmodules?v=1.3&amp;mod=map,oppc,tile,control,marker,poly</a> 我们就能拿到相应参数的模块源文件。<br> 新建文件<code>modules</code>，放在js文件夹里面即可。</p>\n</li>\n<li>关键的一步：搜索<code>getTilesUrl</code>直到找到这样的一段（变量名aU可能不一样）<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">aU.getTilesUrl = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">cN, cQ</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> cR = cN.x;</div><div class=\"line\">    <span class=\"keyword\">var</span> cO = cN.y;</div><div class=\"line\">    <span class=\"keyword\">var</span> T = <span class=\"string\">\"20150518\"</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> cP = <span class=\"string\">\"pl\"</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.map.highResolutionEnabled()) &#123;</div><div class=\"line\">        cP = <span class=\"string\">\"ph\"</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">var</span> cM = j[<span class=\"built_in\">Math</span>.abs(cR + cO) % j.length] + <span class=\"string\">\"?qt=tile&amp;x=\"</span></div><div class=\"line\">\t\t+ (cR + <span class=\"string\">\"\"</span>).replace(<span class=\"regexp\">/-/gi</span>, <span class=\"string\">\"M\"</span>) + <span class=\"string\">\"&amp;y=\"</span></div><div class=\"line\">\t\t+ (cO + <span class=\"string\">\"\"</span>).replace(<span class=\"regexp\">/-/gi</span>, <span class=\"string\">\"M\"</span>) + <span class=\"string\">\"&amp;z=\"</span> + cQ + <span class=\"string\">\"&amp;styles=\"</span> + cP</div><div class=\"line\">        + (a9.browser.ie == <span class=\"number\">6</span> ? <span class=\"string\">\"&amp;color_dep=32&amp;colors=50\"</span> : <span class=\"string\">\"\"</span>)</div><div class=\"line\">        + <span class=\"string\">\"&amp;udt=\"</span> + T;</div><div class=\"line\">    <span class=\"keyword\">return</span> cM.replace(<span class=\"regexp\">/-(\\d+)/gi</span>, <span class=\"string\">\"M$1\"</span>)</div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"built_in\">window</span>.BMAP_NORMAL_MAP = <span class=\"keyword\">new</span> cv(<span class=\"string\">\"\\u5730\\u56fe\"</span>, aU, &#123;</div><div class=\"line\">    <span class=\"attr\">tips</span> : <span class=\"string\">\"\\u663e\\u793a\\u666e\\u901a\\u5730\\u56fe\"</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><code>getTilesUrl</code>这个方法，这里就是返回瓦片未知的关键方法。两个参数中，第一个参数是{x，y}，第二个参数就是z，这样xyz就都有了。<br>直接把它计算出来的cM的结果重新计算一下，改成：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cM = <span class=\"string\">\"tiles/\"</span> + cQ + <span class=\"string\">\"/\"</span> + cR + <span class=\"string\">\"/\"</span> + cO + <span class=\"string\">\".jpg\"</span>;</div></pre></td></tr></table></figure></p>\n<p>.jpg后缀与你下载的瓦片图片格式有关。<br>这样就设置了<code>BMAP_NORMAL_MAP</code>地图类型的地图瓦片获取url，即为放在tiles目录下的瓦片资源。同理可以设置卫星<code>BMAP_SATELLITE_MAP</code>等地图类型的离线瓦片url。</p>\n<h2 id=\"第三步\"><a href=\"#第三步\" class=\"headerlink\" title=\"第三步\"></a>第三步</h2><p>下载相关资源</p>\n<ol>\n<li>图片文件<br>像一些logo等图片资源。可通过chrome开发者工具查看缺少的图片文件，以及url。然后自行下载。将图片放在<code>images</code>文件夹中，并修改<code>bmap.css</code>中相应的url为本地路径。</li>\n<li><p>依赖模块API文件<br> 如果缺少某个依赖模块，则无法使用相应的API。<br> 在运行前期工作中的在线地图时，就可发现，依赖的库参数是什么。例如：以下的代码运行，所请求的依赖库参数是<a href=\"http://api.map.baidu.com/getmodules?v=1.3&amp;mod=map,oppc,tile,control\">http://api.map.baidu.com/getmodules?v=1.3&amp;mod=map,oppc,tile,control</a></p>\n <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></div><div class=\"line\">    <span class=\"keyword\">var</span> map = <span class=\"keyword\">new</span> BMap.Map(<span class=\"string\">\"container\"</span>,&#123;<span class=\"attr\">mapType</span>:BMAP_NORMAL_MAP&#125;);</div><div class=\"line\">    <span class=\"keyword\">var</span> point = <span class=\"keyword\">new</span> BMap.Point(<span class=\"number\">116.404</span>, <span class=\"number\">39.915</span>);    <span class=\"comment\">// 创建点坐标</span></div><div class=\"line\">    map.centerAndZoom(point,<span class=\"number\">5</span>);                     <span class=\"comment\">// 初始化地图,设置中心点坐标和地图级别。</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//map.addControl(new BMap.MapTypeControl());</span></div><div class=\"line\">    map.addControl(<span class=\"keyword\">new</span> BMap.NavigationControl());</div><div class=\"line\">    map.enableScrollWheelZoom();                  <span class=\"comment\">// 启用滚轮放大缩小。</span></div><div class=\"line\">    map.enableKeyboard();                         <span class=\"comment\">// 启用键盘操作。</span></div><div class=\"line\">    <span class=\"comment\">//map.setCurrentCity(\"北京\");          // 设置地图显示的城市 此项是必须设置的</span></div><div class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<p> 总共有哪些依赖模块可以去<code>apiv1.3.min.js</code>中搜索<code>Dependency</code></p>\n</li>\n<li>瓦片资源<br>可以选择 <code>全能电子地图下载器</code> 下载，其中<code>1.9.5</code>版本有破解，不过有些瓦片无法下载。或者选择自己拼凑瓦片，有教程获取瓦片url。</li>\n</ol>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>离线API算是做好了，目录结构大致为：</p>\n<ul>\n<li>css<ul>\n<li>bmap.css</li>\n</ul>\n</li>\n<li>images</li>\n<li>js<ul>\n<li>apiv1.3.min.js</li>\n<li>modules</li>\n</ul>\n</li>\n<li>tiles</li>\n</ul>\n<p><a href=\"https://github.com/lakehumin/hawkui\">HawkUI</a>项目中便用到了该离线API，文件在<code>public</code>目录下。</p>\n"},{"title":"浏览器访问google.com后发生了什么？","date":"2017-07-29T12:51:12.000Z","_content":"sss","source":"_posts/curl-google-com.md","raw":"---\ntitle: 浏览器访问google.com后发生了什么？\ndate: 2017-07-29 20:51:12\ntags:\n- WEB\ncategories:\n- 学习笔记\n---\nsss","slug":"curl-google-com","published":1,"updated":"2017-07-29T13:12:02.314Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5pbgmcb0008v0omlszywyax","content":"<p>sss</p>\n","excerpt":"","more":"<p>sss</p>\n"}],"PostAsset":[{"_id":"source/_posts/BaiduMapAPI/baiduMap.jpg","slug":"baiduMap.jpg","post":"cj5pbgmba0001v0omlt7m7873","modified":0,"renderable":0},{"_id":"source/_posts/curl-google-com/google.gif","slug":"google.gif","post":"cj5pbgmcb0008v0omlszywyax","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cj5pbgmba0001v0omlt7m7873","category_id":"cj5pbgmbm0002v0omwpgmv2nn","_id":"cj5pbgmc00005v0om2j26vpeh"},{"post_id":"cj5pbgmcb0008v0omlszywyax","category_id":"cj5pbgmcf0009v0omdmmbk8bk","_id":"cj5pbgmcl000cv0oml224eqvu"}],"PostTag":[{"post_id":"cj5pbgmba0001v0omlt7m7873","tag_id":"cj5pbgmbt0003v0omq39xfiz4","_id":"cj5pbgmc40006v0omuxd0ufdq"},{"post_id":"cj5pbgmba0001v0omlt7m7873","tag_id":"cj5pbgmbx0004v0omosrxvle2","_id":"cj5pbgmc50007v0om96tesr9f"},{"post_id":"cj5pbgmcb0008v0omlszywyax","tag_id":"cj5pbgmch000av0omsrwauprg","_id":"cj5pbgmcj000bv0om90vjw08u"}],"Tag":[{"name":"百度地图","_id":"cj5pbgmbt0003v0omq39xfiz4"},{"name":"工具","_id":"cj5pbgmbx0004v0omosrxvle2"},{"name":"WEB","_id":"cj5pbgmch000av0omsrwauprg"}]}}